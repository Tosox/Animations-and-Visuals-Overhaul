local ini_eff = ini_file("items\\items\\animations_settings.ltx")
local exo_anims = true

local is_playing_exo = false

local orig_itms_manager_aoibu = itms_manager.actor_on_item_before_use
function itms_manager.actor_on_item_before_use(obj, flags)
    if not exo_anims then
        orig_itms_manager_aoibu(obj, flags)
        return
    end

    local item = obj:section()
    local outfit = db.actor:item_in_slot(7)
    outfit = outfit and outfit:section()
    if not outfit then
        orig_itms_manager_aoibu(obj, flags)
        return
    end

    local hud = SYS_GetParam(0, outfit, "player_hud_section", "")
    if not hud:find("exo$") then
        orig_itms_manager_aoibu(obj, flags)
        return
    end

    local exo_item = item .. "_exo"
    if not ini_eff:r_string_ex(exo_item, "snd") then
        orig_itms_manager_aoibu(obj, flags)
        return
    end

    is_playing_exo = true
    flags.ret_value = false

    hide_hud_inventory()
    enhanced_animations.used_item = exo_item
	enhanced_animations.anim_section = ini_eff:r_string_ex(exo_item, "anm")
	enhanced_animations.anim_prepare()
    db.actor:eat(obj)

    local delay = ini_eff:r_float_ex(exo_item, "tm") * 0.001
    CreateTimeEvent("restore_exo_anim", "restore_exo_anim", delay, function()
        is_playing_exo = false
        return true
    end)
end

function get_is_playing_exo()
    return is_playing_exo
end

function on_option_change()
	exo_anims = avo_enhanced_animations_mcm.get_config("exo_anims")
end

function actor_on_first_update()
	on_option_change()
end

function on_game_start()
    RegisterScriptCallback("on_option_change", on_option_change)
	RegisterScriptCallback("actor_on_first_update", actor_on_first_update)
end
